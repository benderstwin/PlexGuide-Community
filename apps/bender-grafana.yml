#!/bin/bash
#
# Title:      PlexGuide (Reference Title File)
# Author(s):  Bender
# URL:        https://plexguide.com - http://github.plexguide.com
# GNU:        General Public License v3.0


################################################################################
---
- name: Deploy Grafana
  hosts: localhost
  gather_facts: False
  tasks:  
    
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'grafana'
        image: 'grafana/grafana'
        intport: '3000'
        extport: '3000'
# CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/communityapps/apps/_core.yml'

    - name: 'Including folders'
      include_tasks: '/opt/communityapps/apps/_downloaders.yml'

    - name: 'Checking for existing app data'
      stat:
        path: /opt/appdata/{{pgrole}}/core.conf
      register: confcheck
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}},{{tldset}}'
    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/opt/appdata/{{pgrole}}:/var/lib/grafana'
      #    - '/etc/localtime:/etc/localtime:ro'
    
    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'
        
    
          
#####  DEPLOY  ######################33    
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        volumes: '{{pg_volumes}}'
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        labels: '{{pg_labels}}'
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started  

#####  SET PERMS REQUIRED #######
    - name: 'Setting Permissions'
      shell: 'chown 472 -R /opt/appdata/{{pgrole}} && chgrp 472 -R /opt/appdata/{{pgrole}}'
    - name: Restart {{pgrole}}
      docker_container:
        name: '{{pgrole}}'
        state: stopped
    - name: Restart {{pgrole}}
      docker_container:
        name: '{{pgrole}}'
        state: started

  


    